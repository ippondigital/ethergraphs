var ethers = require('../');

function showHelp(error) {
    console.log('Usage');
    console.log('  ethers ACCOUNT_OPTIONS COMMAND [ ARGS ] COMMAND_OPTIONS');
    console.log('');
    console.log('Account Options');
    console.log('  --private-key KEY       A hexidecimal private key');
    console.log('  --address ADDRESS       Use this address (read-only options)');
    console.log('  --account FILENAME      An encrypted JSON wallet');
    console.log('  --password PASSWORD     Account password (WARNING! Unsafe)');
    console.log('  --mnemonic MNEMONIC     A mnemonic phrase');
    console.log("  --path PATH             The mnemonic path (default: m'/44'/60'/0'/0/0)");
    console.log('  --testnet               Use testnet');
    console.log('  --rpc RPC_URL           Use a custom JSON-RPC node');
    console.log('  --dry-run               Display transactions, but do NOT sign or send');
    console.log('');
    console.log('Command: ethers send ADDRESS AMOUNT');
    console.log('');
    console.log('Command: ethers send-transaction');
    console.log('  --data HEX_DATA             ');
    console.log('  --data-text TEXT_DATA             ');
    console.log('  --gas-price PRICE             ');
    console.log('  --gas-limit LIMIT             ');
    console.log('  --to-address ADDRESS             ');
    console.log('  --value AMOUNT             ');
    console.log('  --nonce NONCE            ');
    console.log('');
    console.log('Command: ethers lookup [ ADDRESS | HASH | BLOCK_NUMBER | ENS_NAME ]');
    console.log('');
    console.log('Command: ethers encrypt FILENAME');
    console.log('  --password-out PASSWORD');
    console.log('  --n N');
    console.log('  --r R');
    console.log('  --p P');
    console.log('  --salt SALT');
    console.log('');
    console.log('Command: ethers info');
    console.log('');
}

try {
} catch (error) {
    showHelp(error);
}

switch (command) {
}
